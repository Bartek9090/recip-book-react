{"ast":null,"code":"var _jsxFileName = \"C:\\\\programowanie\\\\Kursy\\\\React\\\\Project\\\\recip-book-app\\\\recip-book\\\\src\\\\pages\\\\RecipePage.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Search from \"../components/Search\";\nimport RecipeList from \"../components/RecipeList\";\nimport MainNavigation from \"../components/MainNavigation\";\nimport apiProxyService from \"../../apiProxyService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RecipePage() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [searchClicked, setSearchClicked] = useState(false);\n  async function getRecipesByIngredients() {\n    try {\n      const resp = await apiProxyService.get(`/recipesByIngredients?search=${search}`);\n      setRecipes(resp.data);\n    } catch (error) {\n      console.error(\"Error fetching recipes:\", error);\n      if (error.response) {\n        // Jeśli istnieje odpowiedź od serwera, ale jest poza zakresem 2xx\n        console.error(\"Status code:\", error.response.status);\n        console.error(\"Response data:\", error.response.data);\n      } else if (error.request) {\n        // Jeśli nie otrzymaliśmy odpowiedzi od serwera\n        console.error(\"No response received:\", error.request);\n      } else {\n        // Inne błędy\n        console.error(\"Error setting up request:\", error.message);\n      }\n\n      // Nie używamy `res` tutaj, ponieważ nie jest zdefiniowane w tym kontekście\n      // Jeśli chcesz obsłużyć błąd na froncie, możesz to zrobić odpowiednio\n    }\n  }\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (search.trim() !== \"\") {\n      await getRecipesByIngredients(search);\n      setSearchClicked(true);\n    } else {\n      alert(\"Search field is empty. Please enter ingredients.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      search: search,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes,\n      searchTerm: search,\n      searchClicked: searchClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RecipePage, \"4IgYE4z434gwTgHsWOz2Z//sCYo=\");\n_c = RecipePage;\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["axios","useState","Search","RecipeList","MainNavigation","apiProxyService","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipePage","_s","search","setSearch","recipes","setRecipes","searchClicked","setSearchClicked","getRecipesByIngredients","resp","get","data","error","console","response","status","request","message","handleChange","e","target","value","handleSubmit","preventDefault","trim","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","searchTerm","_c","$RefreshReg$"],"sources":["C:/programowanie/Kursy/React/Project/recip-book-app/recip-book/src/pages/RecipePage.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport RecipeList from \"../components/RecipeList\";\r\nimport MainNavigation from \"../components/MainNavigation\";\r\nimport apiProxyService from \"../../apiProxyService\";\r\n\r\nexport default function RecipePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [searchClicked, setSearchClicked] = useState(false);\r\n\r\n  async function getRecipesByIngredients() {\r\n    try {\r\n      const resp = await apiProxyService.get(\r\n        `/recipesByIngredients?search=${search}`\r\n      );\r\n      setRecipes(resp.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching recipes:\", error);\r\n\r\n      if (error.response) {\r\n        // Jeśli istnieje odpowiedź od serwera, ale jest poza zakresem 2xx\r\n        console.error(\"Status code:\", error.response.status);\r\n        console.error(\"Response data:\", error.response.data);\r\n      } else if (error.request) {\r\n        // Jeśli nie otrzymaliśmy odpowiedzi od serwera\r\n        console.error(\"No response received:\", error.request);\r\n      } else {\r\n        // Inne błędy\r\n        console.error(\"Error setting up request:\", error.message);\r\n      }\r\n\r\n      // Nie używamy `res` tutaj, ponieważ nie jest zdefiniowane w tym kontekście\r\n      // Jeśli chcesz obsłużyć błąd na froncie, możesz to zrobić odpowiednio\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (search.trim() !== \"\") {\r\n      await getRecipesByIngredients(search);\r\n      setSearchClicked(true);\r\n    } else {\r\n      alert(\"Search field is empty. Please enter ingredients.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <Search\r\n        search={search}\r\n        handleChange={handleChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <RecipeList\r\n        recipes={recipes}\r\n        searchTerm={search}\r\n        searchClicked={searchClicked}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,eAAe,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEzD,eAAeiB,uBAAuBA,CAAA,EAAG;IACvC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMd,eAAe,CAACe,GAAG,CACnC,gCAA+BR,MAAO,EACzC,CAAC;MACDG,UAAU,CAACI,IAAI,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAE/C,IAAIA,KAAK,CAACE,QAAQ,EAAE;QAClB;QACAD,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,QAAQ,CAACC,MAAM,CAAC;QACpDF,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACE,QAAQ,CAACH,IAAI,CAAC;MACtD,CAAC,MAAM,IAAIC,KAAK,CAACI,OAAO,EAAE;QACxB;QACAH,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;MACvD,CAAC,MAAM;QACL;QACAH,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACK,OAAO,CAAC;MAC3D;;MAEA;MACA;IACF;EACF;EAEA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BhB,SAAS,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIrB,MAAM,CAACsB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACxB,MAAMhB,uBAAuB,CAACN,MAAM,CAAC;MACrCK,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM;MACLkB,KAAK,CAAC,kDAAkD,CAAC;IAC3D;EACF,CAAC;EAED,oBACE5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA,CAACH,cAAc;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBjC,OAAA,CAACL,MAAM;MACLU,MAAM,EAAEA,MAAO;MACfgB,YAAY,EAAEA,YAAa;MAC3BI,YAAY,EAAEA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFjC,OAAA,CAACJ,UAAU;MACTW,OAAO,EAAEA,OAAQ;MACjB2B,UAAU,EAAE7B,MAAO;MACnBI,aAAa,EAAEA;IAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA,eACF,CAAC;AAEP;AAAC7B,EAAA,CA5DuBD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}